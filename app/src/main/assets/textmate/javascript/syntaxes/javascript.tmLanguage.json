{
  "name": "JavaScript",
  "scopeName": "source.js",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#braces" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash.js", "match": "//.*$" },
        { "name": "comment.block.js", "begin": "/\\*", "end": "\\*/" }
      ]
    },
    "strings": {
      "patterns": [
        { "name": "string.quoted.double.js", "begin": "\"", "end": "\"" },
        { "name": "string.quoted.single.js", "begin": "'", "end": "'" },
        { "name": "string.template.js", "begin": "`", "end": "`" }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.js", "match": "(?<![A-Za-z_])(?:0x[0-9A-Fa-f]+|0b[01]+|0o[0-7]+|[0-9]+(?:\\.[0-9]+)?)(?![A-Za-z_])" }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.js",
          "match": "\\b(?:if|else|for|while|switch|case|break|continue|return|try|catch|finally|throw)\\b"
        },
        {
          "name": "storage.type.js",
          "match": "\\b(?:var|let|const|function|class|extends|new|import|export|from|as|async|await)\\b"
        },
        {
          "name": "constant.language.boolean.js",
          "match": "\\b(?:true|false|null|undefined)\\b"
        }
      ]
    },
    "braces": {
      "patterns": [
        { "name": "punctuation.section.block.begin.js", "match": "\\{" },
        { "name": "punctuation.section.block.end.js", "match": "\\}" },
        { "name": "punctuation.section.array.begin.js", "match": "\\[" },
        { "name": "punctuation.section.array.end.js", "match": "\\]" },
        { "name": "punctuation.section.group.begin.js", "match": "\\(" },
        { "name": "punctuation.section.group.end.js", "match": "\\)" }
      ]
    }
  }
}